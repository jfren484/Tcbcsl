@model GameResultsEditModel
@{
    var title = $"Manage Game Results{(Model.KeepsStats ? " and Statistics" : "")}";
    ViewBag.Title = $"{title} for {Model.Team.FullName}{Model.Team.Year.AsTitleSuffix()}";

    var dict = new RouteValueDictionary(ViewContext.RouteData.Values);
}
@* TODO: Refactor! *@
<div class="btn-group pull-right">
    @if (Model.Team.Teams.Count > 1)
    {
        <div class="btn-group dropdown year-dropdown">
            <button class="btn btn-info dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @Model.Team.FullName
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu">
                @foreach (var team in Model.Team.Teams)
                {
                    dict["id"] = team.TeamId;
                    var activeClass = team.TeamId == Model.Team.TeamId ? "active" : "";
                    var url = team.TeamId == Model.Team.TeamId ? "" : Url.RouteUrl(dict);

                    <li class="@activeClass"><a href="@url">@team.FullName</a></li>
                }
            </ul>
        </div>
    }
    @Html.Partial("_YearPartial", Model.Team)
</div>
<h2>@title</h2>
@Html.Partial("_AdminListTable", new AdminListTableModel { ListItemName = "Game" })

@section scripts
{
    <script>
        var columns = [
            { 'data': 'GameParticipantId', 'title': '@Html.DisplayNameFor(m => m.GameParticipantId)', 'visible':   false },
            { 'data': 'GameDate',          'title': '@Html.DisplayNameFor(m => m.GameDate)',                                'render': renderDate },
            { 'data': 'Opponent',          'title': '@Html.DisplayNameFor(m => m.Opponent)' },
            { 'data': 'Outcome',           'title': '@Html.DisplayNameFor(m => m.Outcome)' },
            { 'data': 'UrlsForActions',                                                               'orderable': false,   'render': renderStatisticsLinks }
        ];

        datatable_RenderList({
            'tableSelector': '.admin-list',
            'dataUrl': '@Url.Action("Data", new {id = Model.Team.TeamId, year = Model.Team.Year})',
            'columns': columns,
            'sorting': false,
            'paging': false,
            'order': [[findColumnIndex(columns, 'GameDate'), 'asc']]
        });
    </script>
}
