@model ScheduleGameEditModel
<div class="col-lg-3 col-md-4 col-sm-6 grid4321">
    <div class="schedule-game schedule-edit">
        <div class="container-fluid game-header">
            <div class="row">
                <div class="col-xs-12 schedule-game-cell">
                    @(Model.Entered ? Model.Outcome : Model.GameDate.ToString("t"))
                    <div class="game-updates">
                        @if (!Model.Entered)
                        {
                            <button type="button" class="btn btn-info btn-xs data-button" title="Rained Out" data-url="@Url.Action("UpdateGameAsRainedOut", "Game", new {gameId = Model.GameId })">
                                <span class="glyphicon glyphicon-cloud"></span>
                            </button>
                            <button type="button" class="btn btn-info btn-xs data-button" title="Postponed" data-url="@Url.Action("UpdateGameAsPostponed", "Game", new {gameId = Model.GameId })">
                                <span class="glyphicon glyphicon-hourglass"></span>
                            </button>
                            <div class="btn-group dropup">
                                <button type="button" class="btn btn-info dropdown-toggle btn-xs" data-toggle="dropdown" title="Forfeit">
                                    <span class="glyphicon glyphicon-flag"></span> <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li class="dropdown-header">Choose winner:</li>
                                    <li><a class="data-button" data-url="@Url.Action("UpdateGameAsForfeit", "Game", new {winnerGameParticipantId = Model.RoadParticipant.GameParticipantId})">@Model.RoadParticipant.TeamName</a></li>
                                    <li><a class="data-button" data-url="@Url.Action("UpdateGameAsForfeit", "Game", new {winnerGameParticipantId = Model.HomeParticipant.GameParticipantId})">@Model.HomeParticipant.TeamName</a></li>
                                </ul>
                            </div>
                        }
                        <a href="@Url.Action("Edit", "Game", new {id = Model.GameId, urlForReturn = Request.RawUrl})" class="btn btn-info btn-xs" title="Edit">
                            <span class="glyphicon glyphicon-cog"></span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid game-body">
            <div class="overlay">Updated</div>
            @if (!Model.Entered)
            {
                @Html.HiddenFor(m => m.GameId)
                @Html.HiddenFor(m => m.GameDate)
            }
            @Html.EditorFor(m => m.RoadParticipant, new { IsReadonly = Model.Entered })
            @Html.EditorFor(m => m.HomeParticipant, new { IsReadonly = Model.Entered })
        </div>
    </div>
</div>
