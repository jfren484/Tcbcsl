@model NewsEditModel
@{
    const string title = "Manage News";
    ViewBag.Title = title;
}
<h2>@title</h2>
@Html.Partial("_AdminListTable", new AdminListTableModel {ListItemName = "News", CreateItemUrl = Url.Action("Create")})

@section scripts
{
    <script>
        var columns = [
            { 'data': 'NewsItemId',              'title': '@Html.DisplayNameFor(m => m.NewsItemId)',              'visible': false },
            { 'data': 'TeamModel',               'title': '@Html.DisplayNameFor(m => m.TeamModel)',                                               'render': 'TeamName' },
            { 'data': 'IsActive',                'title': '@Html.DisplayNameFor(m => m.IsActive)',                                                'render': renderActiveCell },
            { 'data': 'StartDate',               'title': '@Html.DisplayNameFor(m => m.StartDate)',                                               'render': renderDate },
            { 'data': 'EndDate',                 'title': '@Html.DisplayNameFor(m => m.EndDate)',                                                 'render': renderDate },
            { 'data': 'Subject',                 'title': '@Html.DisplayNameFor(m => m.Subject)' },
            { 'data': 'Content',                 'title': '@Html.DisplayNameFor(m => m.Content)',                                                 'render': renderPartialContent },
            { 'data': 'AuditDetails.CreatedBy',  'title': '@Html.DisplayNameFor(m => m.AuditDetails.CreatedBy)',  'visible': false },
            { 'data': 'AuditDetails.Created',    'title': '@Html.DisplayNameFor(m => m.AuditDetails.Created)',    'visible': false,               'render': renderDate },
            { 'data': 'AuditDetails.ModifiedBy', 'title': '@Html.DisplayNameFor(m => m.AuditDetails.ModifiedBy)', 'visible': false },
            { 'data': 'AuditDetails.Modified',   'title': '@Html.DisplayNameFor(m => m.AuditDetails.Modified)',   'visible': false,               'render': renderDate },
            { 'data': 'EditUrl',                                                                                  'orderable': false,             'render': renderEditLink }
        ];

        datatable_RenderList({
            'tableSelector': '.admin-list',
            'dataUrl': '@Url.Action("Data")',
            'columns': columns,
            'sorting': true,
            'paging': true,
            'order': [[findColumnIndex(columns, 'NewsItemId'), 'desc']]
        });
    </script>
}
