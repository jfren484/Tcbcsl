@model PlayerEditModel
@{
    const string title = "Player Pool";
}
<h2>@title</h2>
@Html.Partial("_AdminListTable", new AdminListTableModel { ListItemName = "Player" })

<div class="modal fade" id="teamPickerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span></button>
                <h4 class="modal-title">Transfer Player To:</h4>
            </div>
            <div class="modal-body">
                @Html.Hidden("rowIndex")
                @Html.Hidden("urlForTransfer")
                @Html.DropDownList("teamId", Model.Team.ItemSelectList, new {@class = "form-control"})
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary">Transfer</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        var columns = [
            { 'data': 'PlayerId',                'title': '@Html.DisplayNameFor(m => m.PlayerId)',                'visible':   false },
            { 'data': 'FirstName',               'title': '@Html.DisplayNameFor(m => m.FirstName)' },
            { 'data': 'LastName',                'title': '@Html.DisplayNameFor(m => m.LastName)' },
            { 'data': 'HasStatsFor',             'title': '@Html.DisplayNameFor(m => m.HasStatsFor)',                                   'render': '[<br />]' },
            { 'data': 'Team',                    'title': '@Html.DisplayNameFor(m => m.Team)',                                          'render': 'FullName' },
            { 'data': 'Team',                    'title': '',                                                     'orderable': false,   'render': renderPlayerTransferLink }
    @if (User.IsInRole(Tcbcsl.Data.Entities.Roles.LeagueCommissioner))
    {
        <text>
            ,{ 'data': 'PlayerId',               'title': 'Merge',                                                'orderable': false,   'render': renderPlayerMerge, }
        </text>
    }
        ];

        datatable_RenderList({
            'tableSelector': '.admin-list',
            'dataUrl': '@Url.Action("PoolData")',
            'columns': columns,
            'sorting': true,
            'paging': true,
            'searching': true,
            'order': [
                [findColumnIndex(columns, 'LastName'), 'asc'],
                [findColumnIndex(columns, 'FirstName'), 'asc']
            ]
        });

        setupPlayerMerge('@Url.Action("Merge")');
    </script>
}
