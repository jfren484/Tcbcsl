@model PlayerEditModel
@{
    const string title = "Player Pool";
}
<h2>@title</h2>
@Html.Partial("_AdminListTable", new AdminListTableModel { ListItemName = "Player" })
@Html.Partial("_TeamPickerModal", Model)

@section scripts
{
    <script>
        var columns = [
            { 'data': 'PlayerId',    'title': '@Html.DisplayNameFor(m => m.PlayerId)', 'visible':   false,                                       'searchable': false },
            { 'data': 'FirstName',   'title': '@Html.DisplayNameFor(m => m.FirstName)' },
            { 'data': 'LastName',    'title': '@Html.DisplayNameFor(m => m.LastName)' },
            { 'data': 'HasStatsFor', 'title': '@Html.DisplayNameFor(m => m.HasStatsFor)',                    'render': '[<br />]' },
            { 'data': 'Team',        'title': '@Html.DisplayNameFor(m => m.Team)',                           'render': 'FullName' },
            { 'data': 'Team',        'title': '',                                      'orderable': false,   'render': renderPlayerTransferLink, 'searchable': false }
    @if (User.IsInRole(Tcbcsl.Data.Entities.Roles.LeagueCommissioner))
    {
        <text>
            ,{ 'data': 'PlayerId',   'title': 'Merge',                                 'orderable': false,   'render': renderPlayerMerge,        'searchable': false }
        </text>
    }
        ];

        datatable_RenderList({
            'dataUrl': '@Url.Action("PoolData")',
            'columns': columns,
            'sorting': true,
            'paging': true,
            'searching': true,
            'order': [
                [findColumnIndex(columns, 'LastName'), 'asc'],
                [findColumnIndex(columns, 'FirstName'), 'asc']
            ]
        });

        setupPlayerMerge('@Url.Action("Merge")');
    </script>
}
