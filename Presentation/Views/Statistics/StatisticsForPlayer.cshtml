@model PlayerStatisticsPageModel
@{
    var title = $"Statistics - {Model.Player.DisplayName}";
    ViewBag.Title = title + Model.Year.AsTitleSuffix();

    var ajaxData = Model.Player.PlayerId + "/" + Model.Year.AsRouteParameter();
    var statsRenderMethod = Model.Year == YearEnum.All
        ? "Career"
        : "Season";
}
@Html.Partial("_YearsPartial", Model.Year)
<h2>@title</h2>
<div id="chart"></div>
@Html.Partial("_StatsTable", "statsTable")
<p>* The second AVG column is @(statsRenderMethod.ToLower())-to-date cummulative average.</p>
@section scripts
{
    @Scripts.Render("~/bundles/highcharts")
    <script>
        $(function () {
            statstable_RenderPlayer@(statsRenderMethod)Stats('@ajaxData');
        });

        var seriesData = [{
            id: 'PlateAppearances',
            name: 'Plate Appearances',
            visible: false
        }, {
            id: 'AtBats',
            name: 'At-bats',
            visible: false
        }, {
            id: 'Hits',
            name: 'Hits'
        }, {
            id: 'TotalBases',
            name: 'Total Bases',
            visible: false
        }, {
            id: 'Runs',
            name: 'Runs'
        }, {
            id: 'RunsBattedIn',
            name: 'Runs Batted In'
        }, {
            id: 'Singles',
            name: 'Singles',
            visible: false
        }, {
            id: 'Doubles',
            name: 'Doubles',
            visible: false
        }, {
            id: 'Triples',
            name: 'Triples',
            visible: false
        }, {
            id: 'HomeRuns',
            name: 'Home Runs',
            visible: false
        }, {
            id: 'Walks',
            name: 'Walks'
        }, {
            id: 'SacrificeFlies',
            name: 'Sacrifice Flies',
            visible: false
        }, {
            id: 'Outs',
            name: 'Outs',
            visible: false
        }, {
            id: 'FieldersChoices',
            name: 'Fielder\'s Choices',
            visible: false
        }, {
            id: 'ReachedByErrors',
            name: 'Reached by Errors',
            visible: false
        }, {
            id: 'Strikeouts',
            name: 'Strikeouts',
            visible: false
        }, {
            id: 'ToDateAverage',
            name: 'Batting Average'
        }, {
            id: 'ToDateOnBasePercentage',
            name: 'On-base Percentage',
            visible: false
        }, {
            id: 'ToDateSluggingPercentage',
            name: 'Slugging Percentage',
            visible: false
        }, {
            id: 'ToDateOnBasePlusSlugging',
            name: 'On-base + Slugging',
            visible: false
@{
    <text>
        }, {
            id: 'Games',
            name: 'Games',
            visible: false
    </text>
}
        }];

        var statsChart = Highcharts.chart('chart', {
            chart: {
                height: 500
            },
            title: {
                text: '@Model.Player.DisplayName'
            },
            subtitle: {
                text: '@(Model.Year == YearEnum.All ? "Career" : $"{(int)Model.Year} Season")'
            },
            yAxis: [{
                title: { text: null },
                labels: {
                    format: '{value:.3f}'
                }
            }, {
                gridLineWidth: 0,
                title: { text: null },
                opposite: true
            }],
            tooltip: {
                shared: true,
                headerFormat: '<span style="font-weight: bold">{point.key}</span><br/>'
            },
            xAxis: [{
                categories: [],
                crosshair: true
            }],
            series: seriesData.map(function (series) {
                var otherProps = series.id.startsWith('ToDate')
                    ? {
                        label: {
                            enabled: false
                        },
                        tooltip: {
                            pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}: <b>{point.y:,.3f}</b><br/>'
                        }
                    } : {
                        type: 'column',
                        yAxis: 1
                    }

                return Object.assign({}, series, otherProps);
            }),
            responsive: {
                rules: [{
                    condition: {
                        maxWidth: 500
                    },
                    chartOptions: {
                        legend: {
                            layout: 'horizontal',
                            align: 'center',
                            verticalAlign: 'bottom'
                        }
                    }
                }]
            }
        });

        $('#statsTable').on('init.dt', function () {
            var xAxisData = [], avgData = [], obpData = [], slgData = [], opsData = [], hitsData = [];
            var statsDataArrays = seriesData.map(function (series) {
                return {
                    id: series.id,
                    array: []
                };
            });

            var statsData = statsTable.data();
            for (var i = 0; i < statsData.length; i++) {
                var row = statsData[i];

                if (row['GameDate']) {
                    xAxisData.push(moment(row['GameDate']).format('MMMM D'));
                } else {
                    xAxisData.push(row['Year']);
                }

                for (var j = 0; j < statsDataArrays.length; j++) {
                    statsDataArrays[j].array.push(row[statsDataArrays[j].id]);
                }
            }

            statsChart.xAxis[0].setCategories(xAxisData);
            for (var j = 0; j < statsDataArrays.length; j++) {
                statsChart.get(statsDataArrays[j].id).setData(statsDataArrays[j].array);
            }
        });
    </script>
}
